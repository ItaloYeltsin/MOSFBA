<?xml version="1.0" encoding="UTF-8"?>
<project name="module_multi-objective_scalaring_function_based_algorithm" default="compile.module.multi-objective_scalaring_function_based_algorithm">
  <dirname property="module.multi-objective_scalaring_function_based_algorithm.basedir" file="${ant.file.module_multi-objective_scalaring_function_based_algorithm}"/>
  
  <property name="module.jdk.home.multi-objective_scalaring_function_based_algorithm" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.multi-objective_scalaring_function_based_algorithm" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.multi-objective_scalaring_function_based_algorithm" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.multi-objective_scalaring_function_based_algorithm" value="-encoding UTF-8 -source 1.5 -target 1.5 ${compiler.args}"/>
  
  <property name="multi-objective_scalaring_function_based_algorithm.output.dir" value="${module.multi-objective_scalaring_function_based_algorithm.basedir}/target/classes"/>
  <property name="multi-objective_scalaring_function_based_algorithm.testoutput.dir" value="${module.multi-objective_scalaring_function_based_algorithm.basedir}/target/test-classes"/>
  
  <path id="multi-objective_scalaring_function_based_algorithm.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="multi-objective_scalaring_function_based_algorithm.module.production.classpath">
    <path refid="${module.jdk.classpath.multi-objective_scalaring_function_based_algorithm}"/>
    <path refid="library.maven:_com.aparapi:aparapi:1.5.0.classpath"/>
    <path refid="library.maven:_com.aparapi:aparapi-jni:1.2.0.classpath"/>
    <path refid="library.junit-4.12.classpath"/>
    <path refid="library.junit.classpath"/>
  </path>
  
  <path id="multi-objective_scalaring_function_based_algorithm.runtime.production.module.classpath">
    <pathelement location="${multi-objective_scalaring_function_based_algorithm.output.dir}"/>
    <path refid="library.maven:_com.aparapi:aparapi:1.5.0.classpath"/>
    <path refid="library.maven:_com.aparapi:aparapi-jni:1.2.0.classpath"/>
    <path refid="library.junit-4.12.classpath"/>
    <path refid="library.junit.classpath"/>
  </path>
  
  <path id="multi-objective_scalaring_function_based_algorithm.module.classpath">
    <path refid="${module.jdk.classpath.multi-objective_scalaring_function_based_algorithm}"/>
    <pathelement location="${multi-objective_scalaring_function_based_algorithm.output.dir}"/>
    <path refid="library.maven:_com.aparapi:aparapi:1.5.0.classpath"/>
    <path refid="library.maven:_com.aparapi:aparapi-jni:1.2.0.classpath"/>
    <path refid="library.junit-4.12.classpath"/>
    <path refid="library.junit.classpath"/>
  </path>
  
  <path id="multi-objective_scalaring_function_based_algorithm.runtime.module.classpath">
    <pathelement location="${multi-objective_scalaring_function_based_algorithm.testoutput.dir}"/>
    <pathelement location="${multi-objective_scalaring_function_based_algorithm.output.dir}"/>
    <path refid="library.maven:_com.aparapi:aparapi:1.5.0.classpath"/>
    <path refid="library.maven:_com.aparapi:aparapi-jni:1.2.0.classpath"/>
    <path refid="library.junit-4.12.classpath"/>
    <path refid="library.junit.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.multi-objective_scalaring_function_based_algorithm">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.multi-objective_scalaring_function_based_algorithm">
    <patternset refid="excluded.from.module.multi-objective_scalaring_function_based_algorithm"/>
  </patternset>
  
  <path id="multi-objective_scalaring_function_based_algorithm.module.sourcepath">
    <dirset dir="${module.multi-objective_scalaring_function_based_algorithm.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="multi-objective_scalaring_function_based_algorithm.module.test.sourcepath">
    <dirset dir="${module.multi-objective_scalaring_function_based_algorithm.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.multi-objective_scalaring_function_based_algorithm" depends="compile.module.multi-objective_scalaring_function_based_algorithm.production,compile.module.multi-objective_scalaring_function_based_algorithm.tests" description="Compile module Multi-objective Scalaring Function Based Algorithm"/>
  
  <target name="compile.module.multi-objective_scalaring_function_based_algorithm.production" depends="register.custom.compilers" description="Compile module Multi-objective Scalaring Function Based Algorithm; production classes">
    <mkdir dir="${multi-objective_scalaring_function_based_algorithm.output.dir}"/>
    <javac2 destdir="${multi-objective_scalaring_function_based_algorithm.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.multi-objective_scalaring_function_based_algorithm}/javac">
      <compilerarg line="${compiler.args.multi-objective_scalaring_function_based_algorithm}"/>
      <bootclasspath refid="multi-objective_scalaring_function_based_algorithm.module.bootclasspath"/>
      <classpath refid="multi-objective_scalaring_function_based_algorithm.module.production.classpath"/>
      <src refid="multi-objective_scalaring_function_based_algorithm.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.multi-objective_scalaring_function_based_algorithm"/>
    </javac2>
    
    <copy todir="${multi-objective_scalaring_function_based_algorithm.output.dir}">
      <fileset dir="${module.multi-objective_scalaring_function_based_algorithm.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.multi-objective_scalaring_function_based_algorithm.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.multi-objective_scalaring_function_based_algorithm.tests" depends="register.custom.compilers,compile.module.multi-objective_scalaring_function_based_algorithm.production" description="compile module Multi-objective Scalaring Function Based Algorithm; test classes" unless="skip.tests">
    <mkdir dir="${multi-objective_scalaring_function_based_algorithm.testoutput.dir}"/>
    <javac2 destdir="${multi-objective_scalaring_function_based_algorithm.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.multi-objective_scalaring_function_based_algorithm}/javac">
      <compilerarg line="${compiler.args.multi-objective_scalaring_function_based_algorithm}"/>
      <bootclasspath refid="multi-objective_scalaring_function_based_algorithm.module.bootclasspath"/>
      <classpath refid="multi-objective_scalaring_function_based_algorithm.module.classpath"/>
      <src refid="multi-objective_scalaring_function_based_algorithm.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.multi-objective_scalaring_function_based_algorithm"/>
    </javac2>
    
    <copy todir="${multi-objective_scalaring_function_based_algorithm.testoutput.dir}">
      <fileset dir="${module.multi-objective_scalaring_function_based_algorithm.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.multi-objective_scalaring_function_based_algorithm" description="cleanup module">
    <delete dir="${multi-objective_scalaring_function_based_algorithm.output.dir}"/>
    <delete dir="${multi-objective_scalaring_function_based_algorithm.testoutput.dir}"/>
  </target>
</project>